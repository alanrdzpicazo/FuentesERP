using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using ProbeMedic.AppCode.BLL;
using System.IO;
using CrystalDecisions.CrystalReports.Engine;

namespace ProbeMedic.INVENTARIOS
{
    public partial class Frm_Ajuste_Inventario : Forma
    {

        public int K_Oficina = 0;
        public int K_Articulo = 0;
        public int K_Almacen = 0;
        public int K_Movimiento_Inventario = 0;
        

        public string Str_Oficina = "";
        public string Str_Almacen = "";
        public string Str_Articulo = "";
        public string Str_Unidad = "";
        public string Str_Lote = "";

        int res;
        string strMensaje;
        string strCorreos;

        SQLAlmacen sqlAlmacen = new SQLAlmacen();
        Funciones fx = new Funciones();

        private void Frm_Ajuste_Inventario_Load(object sender, EventArgs e)
        {
            txtArticulo.Text = Str_Articulo;
            txtUnidadMedida.Text = Str_Unidad;
            txtLote.Text = Str_Lote;
            this.cbx_motivo_ajuste_inventario1.LlenaDatos();
            RbtnSuma.Checked = true;
           
        }

        public Frm_Ajuste_Inventario()
        {
            InitializeComponent();
            
        }

        private void btnGuardar_Click(object sender, EventArgs e)
        {
            if (txtCantidadAjuste.Text.Trim().Length == 0)
            {
                MessageBox.Show("Capture la Cantidad a Ajustar", "Aviso", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtCantidadAjuste.Focus();
                return;
            }
            if (txtObservaciones.Text.Trim().Length == 0)
            {
                MessageBox.Show("Capture las Observaciones del Ajuste", "Aviso", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtObservaciones.Focus();
                return;
            }
            if (RbtnSuma.Checked == false)
                if (RbtnResta.Checked == false)
                {
                    MessageBox.Show("Debe indicar el tipo de Ajuste", "Aviso", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    RbtnSuma.Focus();
                    return;
                }

            try
            {
                strMensaje = "";
                res = sqlAlmacen.In_AjusteInventario(K_Movimiento_Inventario, Convert.ToDecimal(txtCantidadAjuste.Text), Convert.ToInt32(this.cbx_motivo_ajuste_inventario1.SelectedValue.ToString()),
                                                     txtObservaciones.Text, K_Oficina, GlobalVar.K_Usuario, GlobalVar.PC_Name, RbtnSuma.Checked, RbtnResta.Checked, ref strMensaje);

                if (res < 0)
                {
                    MessageBox.Show(strMensaje, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
                else
                {
                    MessageBox.Show("Ajuste Realizado Correctamente", "Información", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    this.Close();
                    //string Asunto = "Productos Eiffel, Ajuste de Inventario Materia Prima";
                    //string CorreoDe = System.Configuration.ConfigurationManager.AppSettings["CorreoDe"].ToString();
                    //string Cuerpo = fx.CuerpoCorreoHTML("Ha sido registrado un Ajuste de Inventario <br><br>Articulo : <strong>" + Str_Articulo + 
                    //                                    "</strong>. <br> Lote:  "  + txtLote.Text + 
                    //                                    " <br> Cantidad de Ajuste: " + txtCantidadAjuste.Text + " " + txtUnidadMedida.Text +
                    //                                    "  <br> Motivo: " + txtObservaciones.Text, B_AtencionCliente: true) ;


                    //                                    //" <br><br> Para acceder al portal ingrese a la siguiente dirección " + System.Configuration.ConfigurationManager.AppSettings["Portal"].ToString());
                    //string Recursos = "logo";
                    //string Archivos = Path.Combine(GlobalVar.rutaExe, "Imagenes/LogoEiffel.png"); //+ "," + Path.Combine(GlobalVar.rutaExe, "Imagenes/Bottom.png");
                    //string Adjuntos = "";

                    //fx.EnviaCorreo(CorreoDe, strCorreos, Asunto, "Ajuste de Inventario Materia Prima", Cuerpo, Adjuntos, Archivos, Recursos, "", false);

                    //MessageBox.Show("Ajuste Realizado Correctamente" + System.Environment.NewLine +
                    //               "Se le notifico por correo.", "Información", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    //Reporte();
                    //this.Close();
                }
            }
                catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
        }

        private void btnCancelar_Click(object sender, EventArgs e)
        {
            this.Close();

        }
        //void Reporte()
        //{
        //    //DataTable dtReporte = sqlVentas.sps_ReporteCotizacion(P_K_Cotizacion);
        //    ReportedtCorreo = null; //dtReporte
        //    string Version = "";//dtReporte.Rows[0]["Version"].ToString();

        //    ReportDocument rpt = new ReportDocument();
        //    rpt = new REPORTES.RPT_Ajuste_Inventario();

        //    ReporteTitulo = "Ajuste de Inventario de Materias Primas";
        //    ReporteModulo = "ALMACEN";

        //    rpt.DataDefinition.FormulaFields["Str_Articulo"].Text = "'" + Str_Articulo + "'";
        //    rpt.DataDefinition.FormulaFields["Str_Cantidad"].Text = "'" + txtCantidadAjuste.Text + "'";
        //    rpt.DataDefinition.FormulaFields["Str_Motivo"].Text = "'" + txtObservaciones.Text + "'";
        //    rpt.DataDefinition.FormulaFields["Str_Oficina"].Text = "'" + Str_Oficina + "'";
        //    rpt.DataDefinition.FormulaFields["Str_Almacen"].Text = "'" + Str_Almacen + "'";
        //    rpt.DataDefinition.FormulaFields["Str_Usuario"].Text = "'" + GlobalVar.D_Usuario+ "'";
        //    rpt.DataDefinition.FormulaFields["Str_UnidadMedida"].Text = "'" + txtUnidadMedida.Text + "'";
        //    rpt.DataDefinition.FormulaFields["Str_Lote"].Text = "'" + Str_Lote + "'";

        //    ConectaReporte(ref rpt, null, ReporteTitulo, ReporteModulo, Version);
        //    ReporteRPT = rpt;

        //    Frm_Reportes frmReporte = new Frm_Reportes();
        //    frmReporte.P_Titulo = ReporteTitulo;
        //    frmReporte.P_ReporteRPT = ReporteRPT;
        //    frmReporte.P_TablaCorreo = ReportedtCorreo;
        //    frmReporte.ShowDialog();
        //}





    }
}
