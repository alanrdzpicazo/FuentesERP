<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Adjuntar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA5xJREFUWEe1l2nIVVUUhq+llVr9ChoccygKKzPJ2axEciCKBin91Y8IwjCEEITI
        TBAFDcSBTJMsIoMUDZGIkBDpV4hDkaY5z5rzlKXP88krDvumV28vPHDvvuvs99yz915rnUod1RTegeVw
        GE7DRvgEHoH/VZ3hDzhbhTPwITSCuqsbHASNTsEcGAqD4T1YD7mRiVBX9YBD4OS74Am4XLfCPDDmX+gD
        dVEviPlOeAiqqTGsBGMXO3Cj8l+40ZxwOzwIV9MbYPxx8IauW0/BEXCybfAAqCZw0/mPRXUBr5EWDlyP
        noaj4CRboQOoW2ABuNY3O1BQb8gN3OVArXoWjoETbIb2oDRfBJn8VSjJY+jvOxq+1agB4No5wSa4H5Q7
        /DuI+UdQUjvIUZ3iQC16DmL+J7QFpfkSiPlYKKk1bABj9sPdcM0aBCfAi52kDajbYCk47tl+H0oy3nRs
        nPO4jFHmqqohcBK82DTbCpQ5/3uI+RgoyWXyiRnnE3QZow/AzeymLup5iPk6aAmqGfwAMR8NJbnmblTj
        3Lj9IRoHjss3DlyuF8CcbsDvcB+o5vAjxNw8X5JHcwsY5798BqLxEHNPjifoEr0EllEDfoN7QWm+DGI+
        CkrqCCanmPeDaALEfCFcYf4KxHwt3APqdvgJYj4SSjIdm5aNM1P2hWgSxPxbMGteIqvY32DAGshRuQNs
        MGI+AkqyEJlgjLNGmPWiyRBz1/yKOmCT8AsY4JGJ+Z2wAmL+NpT0MFgNjbM69oToY4j511AsQjYOMbHQ
        KM1/Bsf/gbegpE6wG4wz03WHaCrE/CuoViMuNAs+6mg+xPxNBwp6FPaAcX/Bk6B8otMh5l9AVXOVliln
        2p3s03DsXQcKegz2gjEHoCsozWdCzD+H/yrRDUqFSxV7HfzueGnNHod9YIy5PW2Y5rMg5p/BVc1VOpvX
        Gr5VKi+D382Env+LpZmm/u5NeDNKo9kQcz9fk7laDV5kilSe/+SDTyEJww3q43bcx+8yKI3mQsx9CjW1
        3zPAC3+FXGj7nAk1tRhlX7jx8qLh5nKdE+v612SubK0z+XAHkBObQHyhyOSyCtL9GvMl5LdpULN5lMbC
        s5x1VdZsu1lfuSwqWVc3p2c75p75G5Ll1heL3MQwqCbrfKqimO3qIt/vchPi5rTTeREGggnJBJVSLS5T
        XWW/bpOZPVENq1617rcu8oXTdGplNCFZKTX1tco9YVtWB1Uq5wC3UzWdbWCebwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="CargarArchivo.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>288, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>